public class Number2 {
     public static void main(String[] args) {
         int a = 8;
         System.out.println(5+2/8); //При устном счете получаем 5.25. Так как переменная int то и значение получаем целое число 5
         System.out.println((5+2)/8); //При устном счете получае 0.875, Так как переменная int то и значение получаем целое число 0
         int b = 2;
         System.out.println((5+b++)/8);// b++ увеличивает число после вычисления выражения. В связи с чем значение 0
         b=2;
         System.out.println((5+b++)/--a); //b++ увеличивает число после вычисления выражения? f--a уменьшает процессе вычисления
         b = 2;
         a = 8;
         System.out.println((5*2>>b)/--a);// по таблице умножение выше, чем сдвиг, следовательно 1) 5*2=10,( в двоичной
         // системе это 00001010), сдвиг вправо 2) 00000010 (в десятичной =2) и последнее действие 2/7=0
         b = 2;
         a = 8;
         System.out.println((5+7>20?68:22*2>>b++)/--a); // Первое действие 22*2=44, второе 5+7=12. Выражение приобретает вид
         // (12>20?68:44>>2)/7. Далее считаетсясдвиг числа 44 (в двоичной системе оно представленно как 00101100, при сдвиге на 2,
         //00001011, что в десятичной системе =11 и выражение приобретет вид 11/7=1
         b = 2;
         a = 8;
         //System.out.println((5+7>20?68>=68:22*2>>b++)/--a); //bad operand types for binary operator '/'. Конфликт переменных.
         //68>=68, даст значение тиба boolean
         a = 8;
         b = 2;
         System.out.println(6-2>3&&12*12<=119); // false
         //Так как 4 > 3 и 144<=119 Первое дает ответ -да, второе -нет, условие не выполняется.
         System.out.println(true&&false); // результат false/ Если хоть в одной части стоит false то оператор && выдаст false

    }
}

